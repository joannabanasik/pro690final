name: Open Shift

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  USERNAME: jbanasik
  IMAGE_NAME: pro690image

jobs:

  cicd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@main
      
      - name: Build and Push the Docker image to DockerHub
        run: |
          echo "${{ secrets.DOCKERHUBPASSWORD}}" | docker login -u "${{ env.USERNAME}}" --password-stdin
          docker build . --file Dockerfile --tag ${{ env.USERNAME}}/${{ env.IMAGE_NAME}}
          docker push ${{ env.USERNAME}}/${{ env.IMAGE_NAME}}
      
      - name: Authenticate with OpenShift and set context
        uses: redhat-actions/oc-login@v1

        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_CLUSTER }}
          openshift_username: kubeadmin
          openshift_password: ${{ secrets.OPENSHIFT_PASSWORD }}
          # Disables SSL cert checking. Use this if you don't have the certificate authority data.
          insecure_skip_tls_verify: true
      
      - name: Deploy and expose a single-container application on OpenShift
        uses: redhat-actions/oc-new-app@v1.2

        with:
          app_name: pro690final
          image: ${{ env.USERNAME}}/${{ env.IMAGE_NAME}}
      
      - name: Install Red Hat OpenShift GitOps
        shell: bash
        run: |
          oc apply -f ./argocd/openshift-gitops-sub.yaml

          sleep 120
          TIMEOUT=0 
          argo_status=$(oc get argocd -n openshift-gitops -o jsonpath='{.items[0].status.server}')
          while [ "$argo_status" != "Running" ]; do
            echo "ArgoCD operator still being deployed. Waiting one more minute..."
            sleep 60
            if [ $TIMEOUT -gt 15 ]; then #15 MINUTES TIMEOUT
              echo "Timeout reached... Check the status of ArgoCD deployment on OpenShift."
              exit 1
            fi
            TIMEOUT=$(($TIMEOUT+1))
            argo_status=$(oc get argocd -n openshift-gitops -o jsonpath='{.items[0].status.server}')
          done
          argocd_url=$(oc get route openshift-gitops-server -n openshift-gitops -o jsonpath='{.spec.host}')
          echo "ArgoCD is installed and available at \"https://$argocd_url\""
          echo "Check the initial password by running this command on your OpenShift cluster: \"oc extract secret/openshift-gitops-cluster -n openshift-gitops --to=-\""
